plugins {
    id 'java'
}

group = 'net.foulest'
version = '1.3.1'
description = 'KitPvP'
compileJava.options.encoding = 'UTF-8'
java.sourceCompatibility = JavaVersion.VERSION_1_8

repositories {
    // Maven central repository
    mavenCentral()

    // Local libraries
    flatDir {
        dirs 'libs'
    }

    // Needed for PlaceholderAPI
    maven {
        url 'https://repo.minebench.de'
    }
}

configurations {
    provided // Custom configuration for compile-only dependencies
    implementation.extendsFrom(provided)
}

dependencies {
    // MariaDB - for database connection
    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    provided group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.3.1'

    // HikariCP - for database connection pooling
    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    provided group: 'com.zaxxer', name: 'HikariCP', version: '4.0.3'

    // Spigot 1.8.8 - necessary for project; provided in libs
    // https://hub.spigotmc.org/nexus/content/repositories/snapshots
    compileOnly group: 'org.spigotmc', name: 'spigot', version: '1.8.8-R0.1-SNAPSHOT'

    // PlaceholderAPI - for placeholders
    // https://mvnrepository.com/artifact/me.clip/placeholderapi
    compileOnly group: 'me.clip', name: 'placeholderapi', version: '2.11.1'

    // WorldEdit - required for WorldGuard
    // https://mvnrepository.com/artifact/com.sk89q.worldedit/worldedit-bukkit
    compileOnly group: 'com.sk89q.worldedit', name: 'worldedit-bukkit', version: '6.1.9'

    // WorldGuard - for region data
    // https://mvnrepository.com/artifact/com.sk89q.worldguard/worldguard-legacy
    compileOnly group: 'com.sk89q.worldguard', name: 'worldguard', version: '6.1'

    // Lombok - for reducing boilerplate code
    // https://projectlombok.org
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.30'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.30'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    // Include compile-only dependencies in the JAR
    from {
        configurations.provided.collect { file ->
            zipTree(file)
        }
    }
}
